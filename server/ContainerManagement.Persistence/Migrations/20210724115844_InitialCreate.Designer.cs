// <auto-generated />
using System;
using ContainerManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContainerManagement.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210724115844_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContainerManagement.Domain.Entities.Container", b =>
                {
                    b.Property<Guid>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContainerTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContainerId");

                    b.HasIndex("ContainerTypeId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("ContainerManagement.Domain.Entities.ContainerType", b =>
                {
                    b.Property<Guid>("ContainerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContainerTypeId");

                    b.ToTable("ContainerTypes");
                });

            modelBuilder.Entity("ContainerManagement.Domain.Entities.Container", b =>
                {
                    b.HasOne("ContainerManagement.Domain.Entities.ContainerType", "ContainerType")
                        .WithMany("Containers")
                        .HasForeignKey("ContainerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContainerType");
                });

            modelBuilder.Entity("ContainerManagement.Domain.Entities.ContainerType", b =>
                {
                    b.Navigation("Containers");
                });
#pragma warning restore 612, 618
        }
    }
}
